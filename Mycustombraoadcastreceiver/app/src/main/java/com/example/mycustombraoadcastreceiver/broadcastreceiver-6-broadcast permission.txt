# AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.VIBRATE"/>
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="com.example.CUSTOM_PERMISSION"/>

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Mycustombraoadcastreceiver"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <receiver android:exported="true" android:name=".SenderReceiver"/>
    </application>

</manifest>

# activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:orientation="vertical"
    android:gravity="center">

    <TextView
        android:id="@+id/text_view"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Message"
        android:textSize="20sp" />

    <Button

        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Send Broadcast"
        android:onClick="sendBroadcast"
        />

</LinearLayout>

# SenderReceiver.java



import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.widget.Toast;

public class SenderReceiver extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {

        int resultCode = getResultCode();
        String resultData = getResultData();
        Bundle resultExtras = getResultExtras(true);
        String stringExtra = resultExtras.getString("stringExtra");

        resultCode++;
        stringExtra+="->SenderReceiver";

        String toastText = "SenderReceiver\n"+
                "resultCode: "+resultCode+"\n"+
                "resultData: "+resultData+"\n"+
                "stringExtra: "+stringExtra;


        Toast.makeText(context, toastText, Toast.LENGTH_LONG).show();

        resultData = "SenderReceiver";
        resultExtras.putString("stringExtra",stringExtra);

        setResult(resultCode,resultData,resultExtras);


    }
}

# MainActivity.java


import androidx.appcompat.app.AppCompatActivity;

import android.Manifest;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    private TextView textView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        textView = findViewById(R.id.text_view);


    }

    public void sendBroadcast(View view) {

        Intent intent = new Intent("com.example.EXAMPLE_ACTION");


        intent.setPackage("com.example.broadcasetreceiverandroidapp");

 // it does not give proper gurentee

//        sendBroadcast(intent);
        // to ensure a proper broadcast with gurantee
//        sendOrderedBroadcast(intent,null);
        // TO TRIGER ANOTHER BROADCAST RECEIVER
        Bundle extras = new Bundle();
        extras.putString("stringExtra","Start");
        sendOrderedBroadcast(intent, Manifest.permission.WAKE_LOCK,new SenderReceiver(),null,0,"Start",extras);

    }




}


